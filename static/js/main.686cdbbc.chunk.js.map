{"version":3,"sources":["components/Header.jsx","components/ProductList.jsx","services/api.js","components/Categories.jsx","pages/Home.jsx","pages/ProductDetails.jsx","components/ProductCard.jsx","pages/ShoppingCart.jsx","App.js","serviceWorker.js","index.js"],"names":["Header","props","state","this","handleInput","handleClick","className","id","type","placeholder","data-testid","onChange","onClick","to","Component","ProductList","products","map","product","key","title","width","src","thumbnail","alt","price","shipping","free_shipping","getCategories","a","fetch","request","json","response","getProductsFromCategoryAndQuery","categoryId","query","Categories","fetchCategories","productsApi","setState","categories","checked","name","htmlFor","value","Home","handleChecked","target","search","handleCheckedSearch","api","results","length","noProducts","ProductDetaills","requestDetails","productId","returnRequest","returnJson","match","params","warranty","action","step","min","required","cols","ProductCard","addCart","removeItemCart","removeCart","countItems","ShoppingCart","amount","cartItems","total","reduce","acc","previusValueProps","App","handlecartItemsItem","produto","odState","bind","previousValue","find","p","some","productRemove","listItems","indiceItem","findIndex","splice","basename","process","exact","path","render","Boolean","window","location","hostname","ReactDOM","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.686cdbbc.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { Link } from 'react-router-dom';\nimport { GrCart } from 'react-icons/gr';\n\nclass Header extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {};\n  }\n\n  render() {\n    const { handleInput, handleClick } = this.props;\n    return (\n      <div className=\"header\">\n        <input\n          id=\"input-search\"\n          className=\"input-search\"\n          type=\"text\"\n          placeholder=\"busca\"\n          data-testid=\"query-input\"\n          onChange={ handleInput }\n        />\n        <button\n          data-testid=\"query-button\"\n          onClick={ handleClick }\n          type=\"button\"\n        >\n          Search\n        </button>\n        <Link\n          to=\"/shopping-cart\"\n          data-testid=\"shopping-cart-button\"\n          className=\"shopping-cart-button\"\n        >\n          <GrCart />\n        </Link>\n        <p className=\"home-initial-message\" data-testid=\"home-initial-message\">\n          Digite algum termo de pesquisa ou escolha uma categoria.\n        </p>\n\n      </div>\n    );\n  }\n}\n\nHeader.propTypes = {\n  handleInput: PropTypes.func.isRequired,\n  handleClick: PropTypes.func.isRequired,\n};\n\nexport default Header;\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { Link } from 'react-router-dom';\n\nclass ProductList extends Component {\n  render() {\n    const { products, onClick } = this.props;\n\n    return (\n      <>\n        {products.map((product) => (\n          <div data-testid=\"product\" className=\"product-item\" key={ product.id }>\n            <Link\n              data-testid=\"product-detail-link\"\n              to={ `details/${product.id}` }\n              key={ `${product.title}` }\n            >\n              <h3>{ product.title }</h3>\n              <img width=\"200px\" src={ product.thumbnail } alt={ product.title } />\n              <p>\n                R$\n                { product.price }\n              </p>\n            </Link>\n            { product.shipping.free_shipping ? <p>Frete Grátis</p> : null}\n\n            <button\n              data-testid=\"product-add-to-cart\"\n              type=\"button\"\n              onClick={ () => onClick(product) }\n            >\n              Adicionar ao carrinho\n            </button>\n          </div>\n        ))}\n      </>\n    );\n  }\n}\n\nProductList.propTypes = {\n  products: PropTypes.shape({\n    title: PropTypes.string,\n    price: PropTypes.number,\n    id: PropTypes.string,\n    thumbnail: PropTypes.string,\n  }),\n  onClick: PropTypes.func.isRequired,\n}.isRequired;\n\nexport default ProductList;\n","export async function getCategories() {\n  const request = await fetch('https://api.mercadolibre.com/sites/MLB/categories');\n  const response = await request.json();\n  return response;\n}\n\n// obsoleto ?\nexport async function getQuery(query) {\n  const request = await fetch(`https://api.mercadolibre.com/sites/MLB/search?q=${query}`);\n  const response = await request.json();\n  return response;\n}\n\nexport async function getProductsById(id) {\n  const returnRequest = await fetch(`https://api.mercadolibre.com/items/${id}`);\n  const returnJson = await returnRequest.json();\n  return returnJson;\n}\n\nexport async function getProductsFromCategoryAndQuery(categoryId, query) {\n  const request = await fetch(`https://api.mercadolibre.com/sites/MLB/search?category=${categoryId}&q=${query}`);\n  const response = request.json();\n  return response;\n}\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport * as productsApi from '../services/api';\nimport './Categories.css';\n\nclass Categories extends Component {\n  constructor() {\n    super();\n    this.state = {\n      categories: [],\n    };\n  }\n\n  componentDidMount() {\n    this.fetchCategories();\n  }\n\n  fetchCategories = async () => {\n    const response = await productsApi.getCategories();\n    this.setState({ categories: response });\n  }\n\n  render() {\n    const { categories } = this.state;\n    const { checked } = this.props;\n    return (\n      <div>\n        {categories.map(({ id, name }) => (\n          <li\n            key={ id }\n          >\n            <label htmlFor={ id }>\n              <input\n                data-testid=\"category\"\n                type=\"radio\"\n                id={ id }\n                name=\"categories\"\n                onChange={ checked }\n                value={ id }\n              />\n              { name }\n            </label>\n          </li>))}\n      </div>\n    );\n  }\n}\n\nCategories.propTypes = {\n  checked: PropTypes.func.isRequired,\n};\nexport default Categories;\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport Header from '../components/Header';\nimport ProductList from '../components/ProductList';\nimport Categories from '../components/Categories';\nimport * as api from '../services/api';\n\nclass Home extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      noProducts: false,\n      products: [],\n      categoryId: '',\n      search: '',\n    };\n  }\n\n  handleChecked = ({ target: { id } }) => {\n    const { search } = this.state;\n    this.setState({ categoryId: id });\n    this.handleCheckedSearch(id, search);\n  }\n\n  handleInput = ({ target: { value } }) => {\n    this.setState({ search: value });\n  }\n\n  // chamada com categoria e imput\n  handleCheckedSearch = async (id, search) => {\n    const response = await api.getProductsFromCategoryAndQuery(id, search);\n    if (response) {\n      if (response.results.length > 0) {\n        this.setState({\n          products: response.results,\n          noProducts: false,\n        });\n      } else {\n        this.setState({\n          noProducts: true,\n        });\n      }\n    }\n  }\n\n  render() {\n    const { products, noProducts, categoryId, search } = this.state;\n    const { onClick } = this.props;\n    const noProduct = 'Nenhum produto encontrado';\n    return (\n      <div>\n        <Header\n          handleInput={ this.handleInput }\n          handleClick={ () => this.handleCheckedSearch(categoryId, search) }\n        />\n        <div className=\"home\">\n          <div className=\"categories\">\n            <Categories checked={ this.handleChecked } />\n          </div>\n          <div className=\"product-list\">\n            { noProducts ? <p>{ noProduct }</p> : <ProductList\n              products={ products }\n              onClick={ onClick }\n            />}\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nHome.propTypes = {\n  onClick: PropTypes.func.isRequired,\n};\n\nexport default Home;\n","import React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport { GrCart } from 'react-icons/gr';\n\nclass ProductDetaills extends Component {\n  constructor(props) {\n    super(props);\n    const {\n      match: {\n        params: { id },\n      },\n    } = this.props;\n    this.state = {\n      product: [],\n      productId: id,\n    };\n  }\n\n  componentDidMount() {\n    this.requestDetails();\n  }\n\n  requestDetails = async () => {\n    const { productId } = this.state;\n    const returnRequest = await fetch(`https://api.mercadolibre.com/items/${productId}`);\n    const returnJson = await returnRequest.json();\n    this.setState({\n      product: returnJson,\n    });\n  }\n\n  render() {\n    const { product } = this.state;\n    const { title, thumbnail, price, warranty } = product;\n    const { onClick } = this.props;\n    return (\n      <div>\n        <Link\n          to=\"/shopping-cart\"\n          data-testid=\"shopping-cart-button\"\n          className=\"shopping-cart-button\"\n        >\n          <GrCart />\n        </Link>\n        <h3>Especificações Técnicas</h3>\n        <h3 data-testid=\"product-detail-name\">{title}</h3>\n        <img src={ thumbnail } alt={ title } />\n        <p>\n          R$\n          {price}\n        </p>\n        {/* { freeShipping ? <p>Frete Grátis</p> : null} */}\n        <button\n          data-testid=\"product-detail-add-to-cart\"\n          type=\"button\"\n          onClick={ () => onClick(product) }\n        >\n          Adicionar ao carrinho\n        </button>\n        {/* <p>Especificações:</p> */}\n        <p>{warranty}</p>\n        <form action=\"GET\">\n          <label htmlFor=\"product_rating\">\n            <input\n              id=\"product_rating\"\n              type=\"number\"\n              step={ 1 }\n              min={ 0 }\n              required\n            />\n          </label>\n          <label htmlFor=\"product_comments\">\n            <textarea\n              id=\"product_comments\"\n              data-testid=\"product-detail-evaluation\"\n              cols=\"20\"\n            />\n          </label>\n\n        </form>\n        <Link to=\"/\">Voltar para a tela inicial</Link>\n      </div>\n    );\n  }\n}\n\nProductDetaills.propTypes = {\n  match: PropTypes.shape({\n    params: PropTypes.shape({\n      id: PropTypes.oneOfType([PropTypes.string, PropTypes.number]).isRequired,\n    }),\n  }).isRequired,\n  product: PropTypes.shape({\n    title: PropTypes.string,\n    price: PropTypes.number,\n    warranty: PropTypes.string,\n    thumbnail: PropTypes.string,\n  }),\n  onClick: PropTypes.func.isRequired,\n}.isRequired;\n\nexport default ProductDetaills;\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\n\nclass ProductCard extends Component {\n  render() {\n    const { product, addCart, removeItemCart, removeCart } = this.props;\n    const { title, price, thumbnail, countItems } = product;\n\n    return (\n      <div>\n        <p data-testid=\"shopping-cart-product-name\">{title}</p>\n        <img src={ thumbnail } alt={ title } />\n        <p>\n          R$\n          { price }\n        </p>\n\n        <button\n          type=\"button\"\n          data-testid=\"product-increase-quantity\"\n          onClick={ () => addCart(product) }\n        >\n          +\n        </button>\n        <p data-testid=\"shopping-cart-product-quantity\">\n          { `Quantidade de itens: ${countItems}` }\n        </p>\n        <button\n          type=\"button\"\n          data-testid=\"product-decrease-quantity\"\n          onClick={ () => removeItemCart(product) }\n        >\n          -\n        </button>\n        <button type=\"button\" onClick={ () => removeCart(product) }>X</button>\n      </div>\n    );\n  }\n}\n\nProductCard.propTypes = {\n  product: PropTypes.objectOf({\n    title: PropTypes.string,\n    price: PropTypes.number,\n    id: PropTypes.string,\n    thumbnail: PropTypes.string,\n    countItems: PropTypes.number.isRequired,\n  }).isRequired,\n  addCart: PropTypes.func.isRequired,\n  removeItemCart: PropTypes.func.isRequired,\n  removeCart: PropTypes.func.isRequired,\n};\n\nexport default ProductCard;\n","import React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport ProductCard from '../components/ProductCard';\n\nclass ShoppingCart extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      total: 0,\n    };\n  }\n\n  componentDidMount() {\n    this.amount();\n  }\n\n  componentDidUpdate(previusValueProps) {\n    if (previusValueProps !== this.props) {\n      this.amount();\n    }\n  }\n\n  amount = () => {\n    const { cartItems } = this.props;\n    const number = 0;\n    if (cartItems.length >= 1) {\n      this.setState({\n        total: cartItems.reduce(\n          (acc, value) => (acc + value.price) * value.countItems,\n          number,\n        ),\n      });\n    }\n  }\n\n  render() {\n    const { cartItems, addCart, removeItemCart, removeCart } = this.props;\n    const { total } = this.state;\n\n    if (cartItems.length === 0) {\n      return (\n        <div>\n          <p data-testid=\"shopping-cart-empty-message\">Seu carrinho está vazio</p>\n          <div>\n            <Link to=\"/\">Voltar para a tela inicial</Link>\n          </div>\n        </div>\n      );\n    }\n\n    return (\n      <div>\n        <div>\n          { cartItems.length }\n        </div>\n        <ul>\n          {cartItems.map((product) => (\n            <li key={ product.id }>\n              <ProductCard\n                addCart={ addCart }\n                removeItemCart={ removeItemCart }\n                removeCart={ removeCart }\n                product={ product }\n              />\n            </li>\n\n          ))}\n        </ul>\n\n        <p>\n          Valor total:\n          { total }\n        </p>\n        <button type=\"button\">Finalizar compras</button>\n        <div>\n          <Link to=\"/\">Voltar para a tela inicial</Link>\n        </div>\n      </div>\n    );\n  }\n}\n\nShoppingCart.propTypes = {\n  cartItems: PropTypes.objectOf({\n    title: PropTypes.string,\n    price: PropTypes.number,\n    id: PropTypes.string,\n    thumbnail: PropTypes.string,\n  }).isRequired,\n  addCart: PropTypes.func.isRequired,\n  removeItemCart: PropTypes.func.isRequired,\n  removeCart: PropTypes.func.isRequired,\n};\n\nexport default ShoppingCart;\n","import React, { Component } from 'react';\nimport { BrowserRouter, Route, Switch } from 'react-router-dom';\nimport './App.css';\nimport Home from './pages/Home';\nimport ProductDetaills from './pages/ProductDetails';\nimport ShoppingCart from './pages/ShoppingCart';\n\nclass App extends Component {\n  constructor() {\n    super();\n    this.addCart = this.addCart.bind(this);\n    this.removeItemCart = this.removeItemCart.bind(this);\n    this.removeCart = this.removeCart.bind(this);\n    this.state = {\n      cartItems: [],\n    };\n  }\n\n  handlecartItemsItem = (produto) => {\n    this.setState((odState) => ({ cartItems: [...odState.cartItems, produto] }));\n  };\n\n  addCart(product) {\n    this.setState((previousValue) => ({\n      cartItems: previousValue.cartItems.find(\n        (p) => p.id === product.id,\n      )\n        ? previousValue.cartItems.map((p) => {\n          if (p.id === product.id) {\n            return {\n              ...p,\n              countItems: p.countItems + 1,\n            };\n          }\n          return p;\n        }) : [...previousValue.cartItems, { ...product, countItems: 1 }],\n    }));\n  }\n\n  removeItemCart(product) {\n    this.setState((previousValue) => ({\n      cartItems: previousValue.cartItems.some(\n        (p) => p.id === product.id,\n      )\n        ? previousValue.cartItems.map((p) => {\n          if (p.id === product.id && p.countItems) {\n            return {\n              ...p,\n              countItems: p.countItems - 1,\n            };\n          }\n          return p;\n        }) : [...previousValue.cartItems, { ...product, countItems: 1 }],\n    }));\n  }\n\n  removeCart(productRemove) {\n    this.setState((previousValue) => {\n      const listItems = [...previousValue.cartItems];\n      const indiceItem = listItems.findIndex((p) => p.id === productRemove.id);\n      listItems.splice(indiceItem, 1);\n      return { cartItems: listItems };\n    });\n  }\n\n  render() {\n    const { cartItems } = this.state;\n\n    return (\n      <div className=\"App\">\n        <BrowserRouter basename={ process.env.PUBLIC_URL }>\n          <Switch>\n            <Route\n              exact\n              path=\"/\"\n              render={ () => <Home onClick={ this.addCart } /> }\n            />\n            <Route\n              exact\n              path=\"/shopping-cart\"\n              render={ (props) => (<ShoppingCart\n                { ...props }\n                addCart={ this.addCart }\n                removeItemCart={ this.removeItemCart }\n                removeCart={ this.removeCart }\n                cartItems={ cartItems }\n              />) }\n            />\n            <Route\n              exact\n              path=\"/details/:id\"\n              render={ (props) => (<ProductDetaills\n                { ...props }\n                onClick={ this.addCart }\n              />) }\n            />\n          </Switch>\n        </BrowserRouter>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost'\n    // [::1] is the IPv6 localhost address.\n    || window.location.hostname === '[::1]'\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    || window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/,\n    ),\n);\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all '\n                  + 'tabs for this page are closed. See https://bit.ly/CRA-PWA.',\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  const NOT_FOUND = 404;\n  const NOT_FOUND_IN_ARRAY = -1;\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  }).then((response) => {\n    // Ensure service worker exists, and that we really are getting a JS file.\n    const contentType = response.headers.get('content-type');\n    if (response.status === NOT_FOUND\n        || (contentType != null\n          && contentType.indexOf('javascript') === NOT_FOUND_IN_ARRAY)) {\n      // No service worker found. Probably a different app. Reload the page.\n      navigator.serviceWorker.ready.then((registration) => {\n        registration.unregister().then(() => {\n          window.location.reload();\n        });\n      });\n    } else {\n      // Service worker found. Proceed as normal.\n      registerValidSW(swUrl, config);\n    }\n  })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.',\n      );\n    });\n}\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service '\n              + 'worker. To learn more, visit https://bit.ly/CRA-PWA',\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then((registration) => {\n        registration.unregister();\n      })\n      .catch((error) => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}